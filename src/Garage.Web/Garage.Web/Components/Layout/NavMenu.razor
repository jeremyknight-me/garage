@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Garage</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                        <span class="bi bi-house-door-fill" aria-hidden="true"></span> Home
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="counter">
                        <span class="bi bi-plus-square-fill" aria-hidden="true"></span> Counter
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="weather">
                        <span class="bi bi-list-nested" aria-hidden="true"></span> Weather
                    </NavLink>
                </li>
                <li class="nav-item">
                    <NavLink class="nav-link" href="auth">
                        <span class="bi bi-lock" aria-hidden="true"></span> Auth Required
                    </NavLink>
                </li>
            </ul>
            <div class="d-flex">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <AuthorizeView>
                        <Authorized>
                            <li class="nav-item">
                                <NavLink class="nav-link" href="Account/Manage">
                                    <span class="bi bi-person-fill" aria-hidden="true"></span> @context.User.Identity?.Name
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <form action="Account/Logout" method="post">
                                    <AntiforgeryToken />
                                    <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                    <button type="submit" class="nav-link">
                                        <span class="bi bi-arrow-bar-left" aria-hidden="true"></span> Logout
                                    </button>
                                </form>
                            </li>
                        </Authorized>
                        <NotAuthorized>
                            <li class="nav-item">
                                <NavLink class="nav-link" href="Account/Register">
                                    <span class="bi bi-person" aria-hidden="true"></span> Register
                                </NavLink>
                            </li>
                            <li class="nav-item">
                                <NavLink class="nav-link" href="Account/Login">
                                    <span class="bi bi-person-badge" aria-hidden="true"></span> Login
                                </NavLink>
                            </li>
                        </NotAuthorized>
                    </AuthorizeView>
                </ul>
            </div>
        </div>
    </div>
</nav>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        this.currentUrl = this.NavigationManager.ToBaseRelativePath(this.NavigationManager.Uri);
        NavigationManager.LocationChanged += this.OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        this.currentUrl = this.NavigationManager.ToBaseRelativePath(e.Location);
        this.StateHasChanged();
    }

    public void Dispose()
    {
        this.NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

